/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.5 astronaut.gltf
Author: teknikfyndet (https://sketchfab.com/teknikfyndet)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/astronaut-dancing-656f383be04644a1a8e1536f3a59e227
Title: Astronaut Dancing
*/

import { useRef, useLayoutEffect } from "react";
import { useGLTF, useAnimations, useScroll } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { gsap } from "gsap";

export const FLOOR_HEIGHT = 1.5;
export const NB_FLOORS = 3;

export default function Model(props) {
  const ref = useRef();
  const { nodes, materials, animations } = useGLTF("/astronaut/astronaut.gltf");
  const { actions } = useAnimations(animations, ref);
  // useLayoutEffect(() => {
  //   actions["Armature.001|DANCE"].play();
  //   actions["Armature.001|DANCE"].timeScale = 0.5;
  // }, []);

  const tl = useRef();
  const scroll = useScroll();

  useFrame(() => {
    tl.current.seek(scroll?.offset * tl.current.duration());
  });

  useLayoutEffect(() => {
    tl.current = gsap.timeline();

    // VERTICAL ANIMATION
    tl.current.to(
      ref.current.position,
      {
        duration: 2,
        y: -FLOOR_HEIGHT * (NB_FLOORS - 1),
      },
      0
    );

    // Office Rotation
    tl.current.to(
      ref.current.rotation,
      { duration: 1, x: 0, y: Math.PI / 6, z: 0 },
      0
    );
    tl.current.to(
      ref.current.rotation,
      { duration: 1, x: 0, y: -Math.PI / 6, z: 0 },
      1
    );

    // Office movement
    tl.current.to(
      ref.current.position,
      {
        duration: 1,
        x: -1,
        z: 2,
      },
      0
    );
    tl.current.to(
      ref.current.position,
      {
        duration: 1,
        x: 1,
        z: 1,
      },
      1
    );
  }, []);
  return (
    <group ref={ref} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group
            name="41439834d5ee4ee29fea82d87b20f210fbx"
            rotation={[Math.PI / 2, 0, 0]}
            scale={0.01}
          >
            <group name="Object_2">
              <group name="RootNode">
                <group
                  name="Armature001"
                  position={[19.535, 31.129, 0.368]}
                  rotation={[-Math.PI / 2, 0, 0]}
                  scale={100}
                >
                  <group name="Object_5">
                    <primitive object={nodes._rootJoint} />
                    <group
                      name="Object_72"
                      position={[19.535, 31.129, 0.368]}
                      rotation={[-Math.PI / 2, 0, 0]}
                      scale={100}
                    />
                    <skinnedMesh
                      name="Object_73"
                      geometry={nodes.Object_73.geometry}
                      material={materials.Character_Texture}
                      skeleton={nodes.Object_73.skeleton}
                    />
                  </group>
                </group>
                <group
                  name="Body001"
                  position={[19.535, 31.129, 0.368]}
                  rotation={[-Math.PI / 2, 0, 0]}
                  scale={100}
                />
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/astronaut/astronaut.gltf");
